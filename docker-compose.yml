version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    env_file:
      - .env.local
    depends_on:
      - postgres
      - redis
    networks:
      - shoplytics-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: shoplytics_secure
      POSTGRES_USER: shoplytics
      POSTGRES_PASSWORD: secure_password_change_this
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - shoplytics-network

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass redis_password_change_this
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shoplytics-network

  # Optional: nginx reverse proxy for production-like setup
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - app
    networks:
      - shoplytics-network

  # Optional: monitoring with Prometheus and Grafana
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - shoplytics-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password_change_this
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - shoplytics-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  shoplytics-network:
    driver: bridge
